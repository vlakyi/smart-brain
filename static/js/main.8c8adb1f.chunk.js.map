{"version":3,"sources":["components/Logo/face_recognition.svg","components/Navigation/Navigation.js","components/Modal/Modal.js","utils/app.utils.js","utils/user.utils.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","memo","signOut","useLocation","pathname","style","display","justifyContent","to","onClick","className","Modal","headerText","mainText","buttonText","isModalOpen","closeModal","fetchData","url","payload","method","a","fetch","headers","body","JSON","stringify","then","response","json","catch","error","console","log","makePostUserRequest","onSuccess","onReject","user","id","loadUser","history","localStorage","setItem","push","state","setState","Signin","useHistory","useState","email","password","signInState","setSignInState","onSubmitSignIn","includes","Fragment","htmlFor","type","name","onChange","event","target","value","Register","registerState","setRegisterState","pattern","title","required","Logo","options","max","height","width","alt","src","logo","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Homepage","particlesOptions","particles","number","density","enable","value_area","initialState","input","isSignedIn","getItem","parse","joined","App","props","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","test","count","Object","assign","err","location","removeItem","passSignInUser","this","params","exact","path","render","Component","withRouter","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8c8adb1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face_recognition.2bb0dac3.svg\";","import React from 'react';\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nconst Navigation = ({signOut}) => {\r\n    const location = useLocation();\r\n    if (location.pathname === '/smartbrain/home') {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Link to={() => {'/smartbrain/signin'}} onClick={signOut} className='f3 link dim black pa3 pointer'> Sign Out</Link>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Link to='/smartbrain/signin' className='f3 link dim black pa3 pointer'> Sign In</Link>\r\n                <Link to='/smartbrain/register' className='f3 link dim black pa3 pointer'> Register</Link>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.memo(Navigation);","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ headerText, mainText, buttonText, isModalOpen, closeModal}) => {\r\n    if(isModalOpen) {\r\n        return (\r\n            <div className='modal_overlay'>\r\n                <div className='modal_container'>\r\n                    <h1>{headerText}</h1>\r\n                    <p>{mainText}</p>\r\n                    <button onClick={closeModal}>{buttonText}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return '';\r\n};\r\n\r\nexport default Modal;","export const fetchData = async (url, payload, method) => {\r\n    return fetch(url, {\r\n        method,\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            ...payload\r\n        })\r\n    })\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .catch(error => console.log(error));\r\n}","import 'node-fetch';\r\nimport {fetchData} from './app.utils';\r\n\r\nexport const makePostUserRequest = async (url, payload, onSuccess, onReject) => {\r\n    try {\r\n        const user = await fetchData(url, payload, 'post');\r\n        if (user.id)\r\n            onSuccess(user);\r\n        else\r\n            onReject('no user id was returned');\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        onReject(error);\r\n    }\r\n}\r\n\r\nexport const onSuccess = (user, loadUser, history) => {\r\n    loadUser(user);\r\n    localStorage.setItem('smartbrain_user', JSON.stringify(user));\r\n    history.push('/smartbrain/home');\r\n}\r\n\r\nexport const onReject = (error, state, setState) => {\r\n    console.log(error);\r\n    setState({ ...state, isModalOpen: true });\r\n}","import React, { useState } from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { makePostUserRequest, onSuccess, onReject } from '../../utils/user.utils';\r\n\r\nconst Signin = ({ loadUser }) => {\r\n    const history = useHistory();\r\n\r\n    const [signInState, setSignInState] = useState({\r\n        email: '',\r\n        password: '',\r\n        isModalOpen: false\r\n    });\r\n\r\n    const onEmailChange = (event) => {\r\n        setSignInState({ ...signInState, email: event.target.value })\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setSignInState({ ...signInState, password: event.target.value })\r\n    }\r\n\r\n    const onSubmitSignIn = async () => {\r\n        const { email, password } = signInState;\r\n\r\n        if ((email === '' && password === '') || !email.includes('@') || !email.includes('.')) {\r\n            setSignInState({ ...signInState, isModalOpen: true });\r\n        }\r\n\r\n        const payload = {email, password };\r\n        makePostUserRequest('https://secure-bastion-14247.herokuapp.com/signin', payload, (user) => onSuccess(user, loadUser, history), (error) => onReject(error, signInState, setSignInState));\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setSignInState({ ...signInState, isModalOpen: false });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal headerText='Wrong Credentials' mainText=\"Please, check your credentials and try again!\" buttonText=\"Try Again\" isModalOpen={signInState.isModalOpen} closeModal={closeModal} />\r\n            <article className=\"br3 ba b--blalck-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6 tl\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6 tl\" htmlFor=\"password\" >Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={onPasswordChange}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className='flex items-center justify-between'>\r\n                            <input\r\n                                onClick={onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Sign in\"\r\n                            />\r\n                            <Link to='/smartbrain/register' className=\"f6 link dim black db pointer\">Register</Link>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport {makePostUserRequest, onSuccess, onReject} from '../../utils/user.utils';\r\n\r\nconst Register = ({ loadUser }) => {\r\n    const history = useHistory();\r\n\r\n    const [registerState, setRegisterState] = useState({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        isModalOpen: false\r\n    });\r\n\r\n    const onNameChange = (event) => {\r\n        setRegisterState({ ...registerState, name: event.target.value })\r\n    }\r\n\r\n    const onEmailChange = (event) => {\r\n        setRegisterState({ ...registerState, email: event.target.value })\r\n    }\r\n\r\n    const onPasswordChange = (event) => {\r\n        setRegisterState({ ...registerState, password: event.target.value })\r\n    }\r\n\r\n    const onSubmitSignIn = async () => {\r\n        const { email, password, name } = registerState;\r\n        if (email === '' || password === '' || name === '' || !email.includes('@') || !email.includes('.')) {\r\n            setRegisterState({ ...registerState, isModalOpen: true });\r\n            return;\r\n        }\r\n\r\n        const payload = {email, password, name};\r\n        makePostUserRequest('https://secure-bastion-14247.herokuapp.com/register', payload, (user) => onSuccess(user, loadUser, history), (error) => onReject(error, registerState, setRegisterState));\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setRegisterState({ ...registerState, isModalOpen: false });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Modal headerText='Wrong Credentials' mainText=\"Please, check your credentials and try again!\" buttonText=\"Try Again\" isModalOpen={registerState.isModalOpen} closeModal={closeModal} />\r\n            <article className=\"br3 ba b--blalck-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6 tl\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    onChange={onNameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6 tl\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6 tl\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                                    title=\"Must contain at least one number and one uppercase and lowercase letter,\r\n                        and at least 8 or more characters\"\r\n                                    onChange={onPasswordChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"flex\">\r\n                            <input\r\n                                onClick={onSubmitSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Register\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logo from './face_recognition.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n       <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2 logo-container\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                 <img alt = 'logo' src = {logo}/> \r\n            </div>\r\n            </Tilt>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n       <React.Fragment>\r\n           <div className =\"white f3\">\r\n               {`${name}, your current entry count is...`}\r\n           </div>\r\n           <div className =\"white f1\">\r\n               {entries}\r\n           </div>\r\n       </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <p className =\"f3\">\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n            </p>\r\n        <div className = \"center\">\r\n            <div className='input_container center form pa4 br3 shadow-5'>\r\n                <input className ='f4 pa2 w-70 center' type = 'tex' onChange={onInputChange}/>\r\n                <button className ='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                onClick={onButtonSubmit}>Detect</button>\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className=\"center ma\">\r\n            <div className=\"absolute mt2\">\r\n                <img id ='inputimage' alt = '' src = {imageUrl} width ='500px' heigh = 'auto'/>\r\n                <div className = \"bounding-box\" style = {{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport Logo from '../Logo/Logo';\r\nimport Rank from '../Rank/Rank';\r\nimport ImageLinkForm from '../ImageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from '../FaceRecognition/FaceRecognition';\r\n\r\nconst Homepage = ({name, entries, box, imageUrl, isModalOpen, closeModal, onInputChange, onButtonSubmit}) => {\r\n    return(\r\n    <React.Fragment>\r\n        <Modal headerText='Wrong Image Url' mainText=\"Please, use correct image url and try again\" buttonText=\"Try Again\" isModalOpen={isModalOpen} closeModal={closeModal} />\r\n        <Logo />\r\n        <Rank name={name} entries={entries} />\r\n        <ImageLinkForm onInputChange={onInputChange} onButtonSubmit={onButtonSubmit} />\r\n        <FaceRecognition box={box} imageUrl={imageUrl} />\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Particles from 'react-particles-js';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Homepage from './components/HomePage/HomePage';\r\n\r\nimport {fetchData} from './utils/app.utils';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  isSignedIn: false,\r\n  user: localStorage.getItem('smartbrain_user') ? JSON.parse(localStorage.getItem('smartbrain_user')) : {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  },\r\n  isModalOpen: false\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    })\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({ box: box });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  onButtonSubmit = async() => {\r\n    const { input, user } = this.state;\r\n\r\n    if (input) {\r\n\r\n      let imageUrlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\r\n      if (!imageUrlRegex.test(input)) {\r\n        this.setState({ isModalOpen: true });\r\n        return;\r\n      }\r\n\r\n      this.setState({ imageUrl: input });\r\n\r\n      fetchData('https://secure-bastion-14247.herokuapp.com/imageurl', {input}, 'post')\r\n        .then(response => {\r\n          if (response) {\r\n            fetchData('https://secure-bastion-14247.herokuapp.com/image', {id: user.id}, 'put')\r\n              .then(count => {\r\n                this.setState(Object.assign(user, { entries: count }))     // to not change user object, but just paramert we use this Object.assign(object, {property: value})\r\n              })\r\n              .catch(err => {\r\n                this.setState({ isModalOpen: true })\r\n                console.log(err)\r\n              })\r\n          }\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n        })\r\n        .catch(err => {\r\n          this.setState({ isModalOpen: true })\r\n          console.log(err)\r\n        })\r\n    }\r\n    else {\r\n      this.setState({ isModalOpen: true })\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalOpen: false });\r\n  }\r\n\r\n  signOut = () => {\r\n    if (this.props.location.pathname === '/smartbrain/home') {\r\n      localStorage.removeItem('smartbrain_user');\r\n      this.setState(initialState);\r\n    }\r\n  }\r\n\r\n  passSignInUser = () => {\r\n    const { imageUrl, box, user: { id, name, entries }, isModalOpen } = this.state;\r\n    return (id !== '') ? <Homepage name={name} entries={entries} imageUrl={imageUrl} box={box} isModalOpen={isModalOpen} closeModal={this.closeModal} onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} /> :\r\n      <Redirect to='/smartbrain/signin' />\r\n  }\r\n\r\n  render() {\r\n    const { user: { id } } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation signOut={this.signOut} />\r\n        <Switch>\r\n          <Route exact path='/smartbrain/home' render={this.passSignInUser} />\r\n\r\n          <Route exact path='/smartbrain/' render={() => {\r\n            return (id !== '') ? <Redirect to='/smartbrain/home' /> : <Redirect to='/smartbrain/signin' />\r\n          }} />\r\n\r\n          <Route exact path='/smartbrain/signin' render={() => {\r\n            return (id !== '') ? <Redirect to='/smartbrain/home' /> : <Signin loadUser={this.loadUser} />\r\n          }} />\r\n\r\n          <Route exact path='/smartbrain/register' render={({ history }) => {\r\n            return (id !== '') ? <Redirect to='/smartbrain/home' /> : <Register loadUser={this.loadUser} history={history} />\r\n          }} />\r\n\r\n          <Route render={() => <Redirect to={{ pathname: \"/smartbrain/signin\" }} />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n// Router\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}