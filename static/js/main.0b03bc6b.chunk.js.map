{"version":3,"sources":["components/Logo/face_recognition.svg","components/Navigation/Navigation.js","components/Modal/Modal.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","memo","signOut","useLocation","pathname","style","display","justifyContent","to","onClick","className","Modal","headerText","mainText","buttonText","isModalOpen","closeModal","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","a","state","loadUser","history","includes","fetch","method","headers","body","JSON","stringify","email","password","response","json","user","id","push","console","log","this","htmlFor","type","name","onChange","Component","Register","onNameChange","then","catch","err","pattern","title","required","Logo","options","max","height","width","alt","src","logo","Rank","entries","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Homepage","particlesOptions","particles","number","density","enable","value_area","initialState","input","isSignedIn","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","test","count","Object","assign","location","params","path","render","exact","withRouter","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0b03bc6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face_recognition.2bb0dac3.svg\";","import React from 'react';\r\nimport { Link, useLocation} from 'react-router-dom';\r\n\r\nconst Navigation = ({signOut}) => {\r\n    const location = useLocation();\r\n    if (location.pathname === '/smartbrain/home') {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Link to={() => {'/smartbrain/signin'}} onClick={signOut} className='f3 link dim black pa3 pointer'> Sign Out</Link>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Link to='/smartbrain/signin' className='f3 link dim black pa3 pointer'> Sign In</Link>\r\n                <Link to='/smartbrain/register' className='f3 link dim black pa3 pointer'> Register</Link>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.memo(Navigation);","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ headerText, mainText, buttonText, isModalOpen, closeModal}) => {\r\n    if(isModalOpen) {\r\n        return (\r\n            <div className='modal_overlay'>\r\n                <div className='modal_container'>\r\n                    <h1>{headerText}</h1>\r\n                    <p>{mainText}</p>\r\n                    <button onClick={closeModal}>{buttonText}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return '';\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Signin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = async () => {\r\n        const { signInEmail, signInPassword } = this.state;\r\n        const {loadUser, history} = this.props;\r\n\r\n        if ((signInEmail === '' && signInPassword === '') || !signInEmail.includes('@') || !signInEmail.includes('.')) {\r\n            this.setState({ isModalOpen: true });\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('https://secure-bastion-14247.herokuapp.com/signin', {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email: signInEmail,\r\n                    password: signInPassword\r\n                })\r\n            })\r\n\r\n            const user = await response.json();\r\n            if(user.id) {\r\n                loadUser(user);\r\n                history.push('/smartbrain/home');\r\n            }\r\n            else {\r\n                this.setState({isModalOpen: true});\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({isModalOpen: true});\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isModalOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal headerText='Wrong Credentials' mainText=\"Please, check your credentials and try again!\" buttonText=\"Try Again\" isModalOpen={this.state.isModalOpen} closeModal={this.closeModal}/>\r\n                <article className=\"br3 ba b--blalck-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"email\"\r\n                                        name=\"email-address\"\r\n                                        id=\"email-address\"\r\n                                        onChange={this.onEmailChange\r\n                                        } />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" >Password</label>\r\n                                    <input\r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        onChange={this.onPasswordChange}\r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input\r\n                                    onClick={this.onSubmitSignIn}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                    type=\"submit\"\r\n                                    value=\"Sign in\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                                <Link to='/smartbrain/register' className=\"f6 link dim black db pointer\">Register</Link>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            isModalOpen: false\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        const {email, password, name} = this.state;\r\n        if(email === '' || password === '' || name === '' || !email.includes('@') || !email.includes('.')) {\r\n            this.setState({ isModalOpen: true});\r\n            return;\r\n        }\r\n        \r\n        fetch('https://secure-bastion-14247.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                name: name\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.history.push('/smartbrain/home');\r\n                }\r\n                else {\r\n                    this.setState({isModalOpen: true});\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                this.setState({isModalOpen: true});\r\n            })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({isModalOpen: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal headerText='Wrong Credentials' mainText=\"Please, check your credentials and try again!\" buttonText=\"Try Again\" isModalOpen={this.state.isModalOpen} closeModal={this.closeModal}/>\r\n                <article className=\"br3 ba b--blalck-10 mv4 w-100 w-50-m w-25-1 mw6 shadow-5 center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                    <input\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        onChange={this.onNameChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"email\"\r\n                                        name=\"email-address\"\r\n                                        id=\"email-address\"\r\n                                        onChange={this.onEmailChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3\">\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                                        title=\"Must contain at least one number and one uppercase and lowercase letter,\r\n                        and at least 8 or more characters\"\r\n                                        onChange={this.onPasswordChange}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input\r\n                                    onClick={this.onSubmitSignIn}\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                    type=\"submit\"\r\n                                    value=\"Register\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logo from './face_recognition.svg';\r\n\r\nconst Logo = () => {\r\n    return (\r\n       <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2 logo-container\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                 <img alt = 'logo' src = {logo}/> \r\n            </div>\r\n            </Tilt>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n       <div>\r\n           <div className =\"white f3\">\r\n               {`${name}, your current entry count is...`}\r\n           </div>\r\n           <div className =\"white f1\">\r\n               {entries}\r\n           </div>\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className =\"f3\">\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try.'}\r\n            </p>\r\n        <div className = \"center\">\r\n            <div className='input_container center form pa4 br3 shadow-5'>\r\n                <input className ='f4 pa2 w-70 center' type = 'tex' onChange={onInputChange}/>\r\n                <button className ='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n                onClick={onButtonSubmit}>Detect</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport \"./FaceRecognition.css\";\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className=\"center ma\">\r\n            <div className=\"absolute mt2\">\r\n                <img id ='inputimage' alt = '' src = {imageUrl} width ='500px' heigh = 'auto'/>\r\n                <div className = \"bounding-box\" style = {{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport Logo from '../Logo/Logo';\r\nimport Rank from '../Rank/Rank';\r\nimport ImageLinkForm from '../ImageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from '../FaceRecognition/FaceRecognition';\r\n\r\nconst Homepage = ({name, entries, box, imageUrl, isModalOpen, closeModal, onInputChange, onButtonSubmit}) => {\r\n    return(\r\n    <div>\r\n        <Modal headerText='Wrong Image Url' mainText=\"Please, use correct image url and try again\" buttonText=\"Try Again\" isModalOpen={isModalOpen} closeModal={closeModal} />\r\n        <Logo />\r\n        <Rank name={name} entries={entries} />\r\n        <ImageLinkForm onInputChange={onInputChange} onButtonSubmit={onButtonSubmit} />\r\n        <FaceRecognition box={box} imageUrl={imageUrl} />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Particles from 'react-particles-js';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\n\r\nimport './App.css';\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Homepage from './components/HomePage/HomePage';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  isSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  },\r\n  isModalOpen: false\r\n}\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    })\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({ box: box });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    const { input, user } = this.state;\r\n\r\n    if (input) {\r\n\r\n      let imageUrlRegex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\r\n      if (!imageUrlRegex.test(input)) {\r\n        this.setState({ isModalOpen: true });\r\n        return;\r\n      }\r\n\r\n      this.setState({ imageUrl: input });\r\n      fetch('https://secure-bastion-14247.herokuapp.com/imageurl', {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          input: input\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          if (response) {\r\n            fetch('https://secure-bastion-14247.herokuapp.com/image', {\r\n              method: 'put',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({\r\n                id: user.id\r\n              })\r\n            })\r\n              .then(response => response.json())\r\n              .then(count => {\r\n                this.setState(Object.assign(user, { entries: count }))     // to not change user object, but just paramert we use this Object.assign(object, {property: value})\r\n              })\r\n              .catch(err => {\r\n                this.setState({ isModalOpen: true })\r\n                console.log(err)\r\n              })\r\n          }\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n        })\r\n        .catch(err => {\r\n          this.setState({ isModalOpen: true })\r\n          console.log(err)\r\n        })\r\n    }\r\n    else {\r\n      this.setState({ isModalOpen: true })\r\n    }\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({ isModalOpen: false });\r\n  }\r\n\r\n  signOut = () => {\r\n    if (this.props.location.pathname === '/smartbrain/home') {\r\n      this.setState(initialState)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imageUrl, box, user: { id, name, entries }, isModalOpen } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation signOut={this.signOut} />\r\n        <Switch>\r\n          <Route path='/smartbrain/home' render={() => {\r\n            if (id !== '') {\r\n              return <Homepage name={name} entries={entries} imageUrl={imageUrl} box={box} isModalOpen={isModalOpen} closeModal={this.closeModal} onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\r\n            }\r\n            else {\r\n              return <Redirect to='/smartbrain/signin' />\r\n            }\r\n          }}>\r\n          </Route>\r\n\r\n          <Route path='/smartbrain/signin' render={({ history }) => (\r\n            <Signin loadUser={this.loadUser} history={history} />\r\n          )}>\r\n          </Route>\r\n\r\n          <Route exact path='/smartbrain/'>\r\n            <Redirect to='/smartbrain/signin' />\r\n          </Route>\r\n\r\n          <Route path='/smartbrain/register'>\r\n            <Register loadUser={this.loadUser} history={this.props.history}/>\r\n          </Route>\r\n          <Route render={() => <Redirect to={{ pathname: \"/smartbrain/signin\" }} />} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n// Router\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}